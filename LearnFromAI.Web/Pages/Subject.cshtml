@page "{id:int}"
@model LearnFromAI.Web.Pages.SubjectModel
@{
    ViewData["Title"] = Model.Subject?.Headline ?? "Subject";
}

<div class="flex flex-col md:flex-row gap-8">
    <aside class="md:w-1/4 bg-white p-4 rounded shadow">
        @await Html.PartialAsync("_CourseOutline", (Model.Subject.CourseId, (int?)Model.Subject.Id, (int?)null))
    </aside>

    <section class="md:w-3/4 space-y-8">
        @if (!string.IsNullOrEmpty(Model.ErrorMessage))
        {
            <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">
                <strong class="font-bold">Error:</strong>
                <span class="block sm:inline">@Model.ErrorMessage</span>
            </div>
        }
        else
        {
            <div class="bg-white p-6 rounded shadow">
                <div class="prose prose-sm sm:prose lg:prose-lg xl:prose-xl max-w-none prose-headings:text-primary">
                    @Html.Raw(Model.Subject.Content)
                </div>
            </div>
        }
    </section>
</div>

<div class="mt-8 flex justify-between">
    <a href="#" class="bg-secondary hover:bg-red-600 px-4 py-2 rounded text-white" onclick="history.back(); return false;">Back</a>
</div>
